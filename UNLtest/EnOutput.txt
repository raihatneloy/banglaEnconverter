=================== NODE LIST ===================
/[<<]/"fvZ LvB Avwg"/>>/
====================================================
lnode >>>>>
-- word candidates for lnode --
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
-- word candidates for rnode --
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
==================== APPLIED RULE ==================
R{:::}{N:::}P10;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
=================== NODE LIST ===================
/<</[fvZ|uw=rice(icl>grain>thing)]/" LvB Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
-- word candidates for rnode --
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== APPLIED RULE ==================
DR{N,^blk:+blk::}{BLK:::}P10;
-- other applicable rules --
DR{N,^blk:+blk::}{BLK:::}(ANUS)P10;
====================================================
=================== NODE LIST ===================
/[<<]/[fvZ]/"LvB Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
==================== APPLIED RULE ==================
R{:::}{N:::}P10;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
=================== NODE LIST ===================
/<</[fvZ]/"LvB Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
-- word candidates for rnode --
[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{N:::}{ROOT,^VERB:::}P10;
-- other applicable rules --
:{N,^biv,blk:-N,+NP::}{^ANUS:::}P10;
R{:::}{ROOT,^VERB:::}P2;
====================================================
>>>>> lnode
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
>>>>> rnode
[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</fvZ/[Lv|uw=eat(icl>consume>do,agt>living_thing,obj>concrete_thing)]/"B Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
====================================================
lnode >>>>>
[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
-- word candidates for rnode --
[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
==================== APPLIED RULE ==================
+{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
-- other applicable rules --
====================================================
>>>>> lnode
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{:::}{VERB,PRS,^&@present:+&@present::}P17;
-- other applicable rules --
:{N,^biv,blk:-N,+NP::}{^ANUS:::}P10;
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
>{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
====================================================
>>>>> lnode
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{N,^biv,blk:-N,+NP::}{^ANUS:::}P10;
-- other applicable rules --
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
>{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
====================================================
>>>>> lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[fvZ]/LvB/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
==================== APPLIED RULE ==================
R{:::}{NP:::}P10;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
-- other applicable rules --
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| | <agt
| |-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| | <agt
| |-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK =====================
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
-- other applicable rules --
====================================================
>>>>> lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| | <agt
| |-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK =====================
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
R{:::}{NP:::}P10;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/[<<]/[fvZ]/LvB/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
==================== BACKTRACK#2 =====================
:{N,^biv,blk:-N,+NP::}{^ANUS:::}P10;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
-- other applicable rules --
>{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
====================================================
>>>>> lnode
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{N,^biv,blk:-N,+NP::}{^ANUS:::}P10;
-- other applicable rules --
>{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
====================================================
>>>>> lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[fvZ]/LvB/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
==================== APPLIED RULE ==================
R{:::}{NP:::}P10;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| | <agt
| |-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK =====================
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
R{:::}{NP:::}P10;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/[<<]/[fvZ]/LvB/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
==================== BACKTRACK#2 =====================
:{N,^biv,blk:-N,+NP::}{^ANUS:::}P10;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
>{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| <obj
|-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,>obj,>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| | <obj
| |-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| <obj
|-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK =====================
>{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
>{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| <obj
|-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,>obj,>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| | <obj
| |-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| <obj
|-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| <obj
|-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,>obj,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| | <obj
| |-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| <obj
|-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| <obj
|-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK =====================
>{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
:{:::}{VERB,PRS,^&@present:+&@present::}P17;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{N,^biv,blk:-N,+NP::}{^ANUS:::}P10;
-- other applicable rules --
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
>{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
====================================================
>>>>> lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[fvZ]/LvB/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
==================== APPLIED RULE ==================
R{:::}{NP:::}P10;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{:::}{VERB,PRS,^&@present:+&@present::}P17;
-- other applicable rules --
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
====================================================
>>>>> lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
-- other applicable rules --
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| | <agt
| |-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| | <agt
| |-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK =====================
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
-- other applicable rules --
====================================================
>>>>> lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| | <agt
| |-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK =====================
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
:{:::}{VERB,PRS,^&@present:+&@present::}P17;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
-- other applicable rules --
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{:::}{VERB,PRS,^&@present:+&@present::}P17;
-- other applicable rules --
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,&@present,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| | <agt
| |-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| | <agt
| |-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
:{:::}{VERB,PRS,^&@present:+&@present::}P17;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| | <agt
| |-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{:::}{VERB,PRS,^&@present:+&@present::}P17;
-- other applicable rules --
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| | <agt
| |-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
:{:::}{VERB,PRS,^&@present:+&@present::}P17;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| | <agt
| |-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK =====================
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
-- other applicable rules --
====================================================
>>>>> lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{:::}{VERB,PRS,^&@present:+&@present::}P17;
-- other applicable rules --
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
====================================================
>>>>> lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| | <agt
| |-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK =====================
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
:{:::}{VERB,PRS,^&@present:+&@present::}P17;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{:::}{VERB,PRS,^&@present:+&@present::}P17;
-- other applicable rules --
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,&@present,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| | <agt
| |-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
:{:::}{VERB,PRS,^&@present:+&@present::}P17;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| | <agt
| |-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK =====================
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
R{:::}{NP:::}P10;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/[<<]/[fvZ]/LvB/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
==================== BACKTRACK#2 =====================
:{N,^biv,blk:-N,+NP::}{^ANUS:::}P10;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
-- other applicable rules --
>{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
====================================================
>>>>> lnode
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{:::}{VERB,PRS,^&@present:+&@present::}P17;
-- other applicable rules --
:{N,^biv,blk:-N,+NP::}{^ANUS:::}P10;
>{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
====================================================
>>>>> lnode
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{N,^biv,blk:-N,+NP::}{^ANUS:::}P10;
-- other applicable rules --
>{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
====================================================
>>>>> lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[fvZ]/LvB/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
==================== APPLIED RULE ==================
R{:::}{NP:::}P10;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| | <agt
| |-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK =====================
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
R{:::}{NP:::}P10;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/[<<]/[fvZ]/LvB/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
==================== BACKTRACK#2 =====================
:{N,^biv,blk:-N,+NP::}{^ANUS:::}P10;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
>{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| <obj
|-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,>obj,>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| | <obj
| |-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| <obj
|-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK =====================
>{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
:{:::}{VERB,PRS,^&@present:+&@present::}P17;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{N,^biv,blk:-N,+NP::}{^ANUS:::}P10;
-- other applicable rules --
>{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
====================================================
>>>>> lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[fvZ]/LvB/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
==================== APPLIED RULE ==================
R{:::}{NP:::}P10;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{:::}{VERB,PRS,^&@present:+&@present::}P17;
-- other applicable rules --
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
====================================================
>>>>> lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| | <agt
| |-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK =====================
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
:{:::}{VERB,PRS,^&@present:+&@present::}P17;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{:::}{VERB,PRS,^&@present:+&@present::}P17;
-- other applicable rules --
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,&@present,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| | <agt
| |-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
:{:::}{VERB,PRS,^&@present:+&@present::}P17;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| | <agt
| |-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK =====================
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
R{:::}{NP:::}P10;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/[<<]/[fvZ]/LvB/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
==================== BACKTRACK#2 =====================
:{N,^biv,blk:-N,+NP::}{^ANUS:::}P10;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
>{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| <obj
|-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{:::}{VERB,PRS,^&@present:+&@present::}P17;
-- other applicable rules --
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| <obj
|-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,&@present,>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| | <obj
| |-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| <obj
|-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
:{:::}{VERB,PRS,^&@present:+&@present::}P17;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| <obj
|-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| | <obj
| |-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| <obj
|-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK =====================
>{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
>{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| <obj
|-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{:::}{VERB,PRS,^&@present:+&@present::}P17;
-- other applicable rules --
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| <obj
|-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,&@present,>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| | <obj
| |-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| <obj
|-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| <obj
|-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,&@present,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| | <obj
| |-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| <obj
|-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| <obj
|-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
:{:::}{VERB,PRS,^&@present:+&@present::}P17;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| <obj
|-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| | <obj
| |-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| <obj
|-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| <obj
|-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{:::}{VERB,PRS,^&@present:+&@present::}P17;
-- other applicable rules --
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| <obj
|-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,&@present,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| | <obj
| |-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| <obj
|-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
:{:::}{VERB,PRS,^&@present:+&@present::}P17;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| <obj
|-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| | <obj
| |-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| <obj
|-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| <obj
|-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK =====================
>{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK =====================
+{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
<<<<< lnode
[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
;;next entry for rnode #4
;;no entry for rnode
;;next rule #6
=================== NODE LIST ===================
/<</fvZ/[Lv|uw=eat(icl>consume>do,agt>living_thing,obj>concrete_thing)]/"B Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
====================================================
lnode >>>>>
[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
==================== BACKTRACK#2 =====================
R{N:::}{ROOT,^VERB:::}P10;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next entry for rnode #4
;;no entry for rnode
;;next rule #6
=================== NODE LIST ===================
/<</[fvZ]/"LvB Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
-- word candidates for rnode --
[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{N,^biv,blk:-N,+NP::}{^ANUS:::}P10;
-- other applicable rules --
R{:::}{ROOT,^VERB:::}P2;
====================================================
>>>>> lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
>>>>> rnode
[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[fvZ]/Lv|uw=eat(icl>consume>do,agt>living_thing,obj>concrete_thing)/"B Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
==================== APPLIED RULE ==================
R{:::}{NP:::}P10;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
=================== NODE LIST ===================
/<</[fvZ]/[Lv|uw=eat(icl>consume>do,agt>living_thing,obj>concrete_thing)]/"B Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{:::}{ROOT,^VERB:::}P2;
-- other applicable rules --
====================================================
>>>>> lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
>>>>> rnode
[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</fvZ/[Lv|uw=eat(icl>consume>do,agt>living_thing,obj>concrete_thing)]/"B Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
====================================================
lnode >>>>>
[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
-- word candidates for rnode --
[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
==================== APPLIED RULE ==================
+{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
-- other applicable rules --
====================================================
>>>>> lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{:::}{VERB,PRS,^&@present:+&@present::}P17;
-- other applicable rules --
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
====================================================
>>>>> lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
-- other applicable rules --
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| | <agt
| |-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| | <agt
| |-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK =====================
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
-- other applicable rules --
====================================================
>>>>> lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| | <agt
| |-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK =====================
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
:{:::}{VERB,PRS,^&@present:+&@present::}P17;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
-- other applicable rules --
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{:::}{VERB,PRS,^&@present:+&@present::}P17;
-- other applicable rules --
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,&@present,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| | <agt
| |-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| | <agt
| |-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
:{:::}{VERB,PRS,^&@present:+&@present::}P17;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| | <agt
| |-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{:::}{VERB,PRS,^&@present:+&@present::}P17;
-- other applicable rules --
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| | <agt
| |-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
:{:::}{VERB,PRS,^&@present:+&@present::}P17;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| | <agt
| |-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK =====================
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
-- other applicable rules --
====================================================
>>>>> lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{:::}{VERB,PRS,^&@present:+&@present::}P17;
-- other applicable rules --
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
====================================================
>>>>> lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| | <agt
| |-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK =====================
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
:{:::}{VERB,PRS,^&@present:+&@present::}P17;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{:::}{VERB,PRS,^&@present:+&@present::}P17;
-- other applicable rules --
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,&@present,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| | <agt
| |-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
:{:::}{VERB,PRS,^&@present:+&@present::}P17;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| | <agt
| |-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK =====================
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK =====================
+{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
<<<<< lnode
[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
;;next entry for rnode #4
;;no entry for rnode
;;next rule #6
=================== NODE LIST ===================
/<</fvZ/[Lv|uw=eat(icl>consume>do,agt>living_thing,obj>concrete_thing)]/"B Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
====================================================
lnode >>>>>
[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
==================== BACKTRACK#2 =====================
R{:::}{ROOT,^VERB:::}P2;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[Lv|uw=eat(icl>consume>do,agt>living_thing,obj>concrete_thing)]/"B Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
R{:::}{NP:::}P10;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/[<<]/[fvZ]/Lv|uw=eat(icl>consume>do,agt>living_thing,obj>concrete_thing)/"B Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
==================== BACKTRACK#2 =====================
:{N,^biv,blk:-N,+NP::}{^ANUS:::}P10;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next entry for rnode #4
;;no entry for rnode
;;next rule #6
=================== NODE LIST ===================
/<</[fvZ]/"LvB Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
-- word candidates for rnode --
[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{:::}{ROOT,^VERB:::}P2;
-- other applicable rules --
====================================================
>>>>> lnode
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
>>>>> rnode
[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</fvZ/[Lv|uw=eat(icl>consume>do,agt>living_thing,obj>concrete_thing)]/"B Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
====================================================
lnode >>>>>
[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
-- word candidates for rnode --
[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
==================== APPLIED RULE ==================
+{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
-- other applicable rules --
====================================================
>>>>> lnode
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{:::}{VERB,PRS,^&@present:+&@present::}P17;
-- other applicable rules --
:{N,^biv,blk:-N,+NP::}{^ANUS:::}P10;
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
>{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
====================================================
>>>>> lnode
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{N,^biv,blk:-N,+NP::}{^ANUS:::}P10;
-- other applicable rules --
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
>{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
====================================================
>>>>> lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[fvZ]/LvB/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
==================== APPLIED RULE ==================
R{:::}{NP:::}P10;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
-- other applicable rules --
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| | <agt
| |-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| | <agt
| |-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK =====================
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
-- other applicable rules --
====================================================
>>>>> lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| | <agt
| |-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK =====================
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
R{:::}{NP:::}P10;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/[<<]/[fvZ]/LvB/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
==================== BACKTRACK#2 =====================
:{N,^biv,blk:-N,+NP::}{^ANUS:::}P10;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
-- other applicable rules --
>{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
====================================================
>>>>> lnode
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{N,^biv,blk:-N,+NP::}{^ANUS:::}P10;
-- other applicable rules --
>{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
====================================================
>>>>> lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[fvZ]/LvB/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
==================== APPLIED RULE ==================
R{:::}{NP:::}P10;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| | <agt
| |-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK =====================
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
R{:::}{NP:::}P10;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/[<<]/[fvZ]/LvB/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
==================== BACKTRACK#2 =====================
:{N,^biv,blk:-N,+NP::}{^ANUS:::}P10;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
>{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| <obj
|-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,>obj,>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| | <obj
| |-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| <obj
|-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK =====================
>{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
>{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| <obj
|-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,>obj,>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| | <obj
| |-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| <obj
|-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| <obj
|-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,>obj,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| | <obj
| |-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| <obj
|-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| <obj
|-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK =====================
>{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
:{:::}{VERB,PRS,^&@present:+&@present::}P17;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{N,^biv,blk:-N,+NP::}{^ANUS:::}P10;
-- other applicable rules --
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
>{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
====================================================
>>>>> lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[fvZ]/LvB/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
==================== APPLIED RULE ==================
R{:::}{NP:::}P10;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{:::}{VERB,PRS,^&@present:+&@present::}P17;
-- other applicable rules --
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
====================================================
>>>>> lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
-- other applicable rules --
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| | <agt
| |-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| | <agt
| |-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK =====================
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
-- other applicable rules --
====================================================
>>>>> lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| | <agt
| |-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK =====================
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,&@present,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
:{:::}{VERB,PRS,^&@present:+&@present::}P17;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
-- other applicable rules --
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{:::}{VERB,PRS,^&@present:+&@present::}P17;
-- other applicable rules --
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,&@present,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| | <agt
| |-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| | <agt
| |-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
:{:::}{VERB,PRS,^&@present:+&@present::}P17;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| | <agt
| |-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{:::}{VERB,PRS,^&@present:+&@present::}P17;
-- other applicable rules --
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| | <agt
| |-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
:{:::}{VERB,PRS,^&@present:+&@present::}P17;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| | <agt
| |-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK =====================
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
-- other applicable rules --
====================================================
>>>>> lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{:::}{VERB,PRS,^&@present:+&@present::}P17;
-- other applicable rules --
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
====================================================
>>>>> lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| | <agt
| |-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK =====================
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
:{:::}{VERB,PRS,^&@present:+&@present::}P17;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{:::}{VERB,PRS,^&@present:+&@present::}P17;
-- other applicable rules --
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,&@present,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| | <agt
| |-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
:{:::}{VERB,PRS,^&@present:+&@present::}P17;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| | <agt
| |-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK =====================
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
R{:::}{NP:::}P10;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/[<<]/[fvZ]/LvB/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
==================== BACKTRACK#2 =====================
:{N,^biv,blk:-N,+NP::}{^ANUS:::}P10;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
-- other applicable rules --
>{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
====================================================
>>>>> lnode
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{:::}{VERB,PRS,^&@present:+&@present::}P17;
-- other applicable rules --
:{N,^biv,blk:-N,+NP::}{^ANUS:::}P10;
>{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
====================================================
>>>>> lnode
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{N,^biv,blk:-N,+NP::}{^ANUS:::}P10;
-- other applicable rules --
>{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
====================================================
>>>>> lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[fvZ]/LvB/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
==================== APPLIED RULE ==================
R{:::}{NP:::}P10;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| | <agt
| |-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK =====================
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
R{:::}{NP:::}P10;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/[<<]/[fvZ]/LvB/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
==================== BACKTRACK#2 =====================
:{N,^biv,blk:-N,+NP::}{^ANUS:::}P10;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
>{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| <obj
|-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,>obj,>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| | <obj
| |-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| <obj
|-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK =====================
>{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
:{:::}{VERB,PRS,^&@present:+&@present::}P17;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{N,^biv,blk:-N,+NP::}{^ANUS:::}P10;
-- other applicable rules --
>{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
====================================================
>>>>> lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[fvZ]/LvB/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
==================== APPLIED RULE ==================
R{:::}{NP:::}P10;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{:::}{VERB,PRS,^&@present:+&@present::}P17;
-- other applicable rules --
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
====================================================
>>>>> lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| | <agt
| |-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK =====================
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
:{:::}{VERB,PRS,^&@present:+&@present::}P17;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,&@present,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{:::}{VERB,PRS,^&@present:+&@present::}P17;
-- other applicable rules --
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,&@present,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| | <agt
| |-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
:{:::}{VERB,PRS,^&@present:+&@present::}P17;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| | <agt
| |-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
| <agt
|-[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK =====================
>(SHEAD){NP::agt:}{VERB,#AGT:::}P10;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
R{:::}{NP:::}P10;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/[<<]/[fvZ]/LvB/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
==================== BACKTRACK#2 =====================
:{N,^biv,blk:-N,+NP::}{^ANUS:::}P10;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (NP,blk,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
>{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| <obj
|-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{:::}{VERB,PRS,^&@present:+&@present::}P17;
-- other applicable rules --
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| <obj
|-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,&@present,>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| | <obj
| |-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| <obj
|-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
:{:::}{VERB,PRS,^&@present:+&@present::}P17;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| <obj
|-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| | <obj
| |-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| <obj
|-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK =====================
>{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
>{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| <obj
|-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{:::}{VERB,PRS,^&@present:+&@present::}P17;
-- other applicable rules --
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| <obj
|-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,&@present,>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| | <obj
| |-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| <obj
|-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| <obj
|-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,&@present,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| | <obj
| |-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| <obj
|-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| <obj
|-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
:{:::}{VERB,PRS,^&@present:+&@present::}P17;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| <obj
|-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| | <obj
| |-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| <obj
|-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| <obj
|-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
:{:::}{VERB,PRS,^&@present:+&@present::}P17;
-- other applicable rules --
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| <obj
|-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,&@present,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| | <obj
| |-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| <obj
|-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
:{:::}{VERB,PRS,^&@present:+&@present::}P17;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@present,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| <obj
|-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== APPLIED RULE ==================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
-- other applicable rules --
====================================================
>>>>> lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
>>>>> rnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
=================== NODE LIST ===================
/<</[SCOPE:01]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (&@entry,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| | >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| | <obj
| |-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
| |-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|   |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|   |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{SHEAD:::}{VERB,^&@entry:+&@entry::}P11;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[SCOPE:01]{}  "" (SCOPE,>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;rnode SCOPE:01 to be deleted
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| <obj
|-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK#2 =====================
:{:::}{VERB,KBIV:-ROOT,-KBIV,-VEND,-CEND::}P9;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,1P,PRS,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/[<<]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| >{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
| <obj
|-[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
|-[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  | +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
  |-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
  |-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK =====================
>{N,^#POS::obj:}{VERB,#OBJ,^>obj:::}P8;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/<</[fvZ]/[LvB]/" Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
| +{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
|-[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
|-[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[LvB]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (>obj,>agt,VERB,KBIV,CEND,1P,PRS,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
==================== BACKTRACK =====================
+{ROOT,VEND,^VERB:+VERB,-ROOT,+@::}{KBIV,VEND:::}P10;
<<<<< lnode
[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
[B]{}  "KBIV" (KBIV,VEND,CEND,1P,PRS) <B,0,0>;.[]{}
;;next entry for rnode #4
;;no entry for rnode
;;next rule #6
=================== NODE LIST ===================
/<</fvZ/[Lv|uw=eat(icl>consume>do,agt>living_thing,obj>concrete_thing)]/"B Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}

[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
====================================================
lnode >>>>>
[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
<<<<< rnode
==================== BACKTRACK#2 =====================
R{:::}{ROOT,^VERB:::}P2;
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[Lv]{}  "eat(icl>consume>do,agt>living_thing,obj>concrete_thing)" (ROOT,VEND,#AGT,#OBJ,VEG1) <B,0,2>;.[]{}
;;next entry for rnode #4
;;no entry for rnode
;;next rule #6
=================== NODE LIST ===================
/<</[fvZ]/"LvB Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
==================== BACKTRACK#2 =====================
R{:::}{N:::}P10;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
;;next rule #5
=================== NODE LIST ===================
/[<<]/[fvZ]/"LvB Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
==================== BACKTRACK ====================
DR{N,^blk:+blk::}{BLK:::}P10;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[fvZ]{}  "rice(icl>grain>thing)" (blk,N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
;;next entry for rnode #4
;;no entry for rnode
;;next rule #6
=================== NODE LIST ===================
/<</[fvZ|uw=rice(icl>grain>thing)]/" LvB Avwg"/>>/

[<<]{}  "" (SHEAD) <.,0,0>;.[]{}

[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
====================================================
lnode >>>>>
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
==================== BACKTRACK#1 =====================
<<<<< lnode
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
<<<<< rnode
[ ]{}  "" (BLK) <.,0,0>;.[]{}
==================== BACKTRACK#2 =====================
R{:::}{N:::}P10;
<<<<< lnode
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
<<<<< rnode
[fvZ]{}  "rice(icl>grain>thing)" (N,NMAT,NCOM,#OBJ,CEND) <B,0,0>;.[]{}
;;next entry for rnode #4
;;no entry for rnode
;;next rule #6
=================== NODE LIST ===================
/[<<]/"fvZ LvB Avwg"/>>/
====================================================
lnode >>>>>
-- word candidates for lnode --
[<<]{}  "" (SHEAD) <.,0,0>;.[]{}
rnode >>>>>
;;no rule
;;to backtrack
[S:1]
{org}
fvZ LvB Avwg
{/org}
{unl}
[W]

[/W]
{/unl}
[/S]
;;Time  0.1	Sec
;;Done!
